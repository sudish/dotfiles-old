#!/bin/zsh
#
# Functions to ease building Emacs from the repo
#

EMACS_PREFIX=/opt/sj/emacs
EMACS_CC_FLAGS=(CC=gcc CXX=g++ CFLAGS="-pipe -Wall -O3 \
	-m64 -march=core2 -mtune=core2 -mmmx -msse4.1")
EMACS_CONF_FLAGS=(--verbose --with-x --with-sound --with-imagemagick \
    --without-pop --prefix=$EMACS_PREFIX)

sj_vcs () {
    local res
    if [[ -d .git || -d ../.git ]] ; then
	res=git
    elif [[ -d .bzr || -d ../.bzr ]] ; then
	res=bzr
    elif [[ -d _darcs || -d ../_darcs  ]] ; then
	res=darcs
    fi

    echo $res
}

sj_emacsupdate () {
    local vcs
    vcs=`sj_vcs`

    $vcs tag --force sj-pull >/dev/null 2>&1 # last HEAD, aka HEAD@{1}
    $vcs pull
}

sj_emacsconfigure () {
    print -z $EMACS_CC_FLAGS `sj_configure` $EMACS_CONF_FLAGS
}

sj_emacsbuild () {
    local vcs build_dir
    vcs=`sj_vcs`

    rm -rf sj-build.*
    build_dir=sj-build.$$

    sh ./autogen.sh
    mkdir $build_dir || { echo "couldn't mkdir $build_dir: $!"; return 1 }
    cd $build_dir

    env "$EMACS_CC_FLAGS[@]" `sj_configure` "$EMACS_CONF_FLAGS[@]" \
	&& nice -n 20 make -j2 \
	&& $vcs tag --force sj-build
}

sj_emacsinstall () {
    local current last bak vcs
    vcs=`sj_vcs`

    if [[ -e $last ]]; then
      bak=/tmp/emacs-$(date -r $last '+%s')
      mv $last $bak
    fi

    current=$EMACS_PREFIX
    [[ -e $current ]] && mv $current $last

    nice -n 20 make install \
	&& cd .. \
	&& rm -rf sj-build.* \
	&& $vcs tag --force sj-install
}
